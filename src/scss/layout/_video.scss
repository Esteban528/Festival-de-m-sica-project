@use 'base/variables' as v;
@use 'base/mixins' as m;

// Video
.video {
    position: relative; /* Establece la posición "relativa" para el elemento. Esto significa que se posicionará en relación a su posición original, es decir, se moverá con respecto a su posición original. */
    min-height: 50rem; /* Establece la altura mínima del elemento en 50 "rem". Si el contenido del elemento es menor que esta altura, el elemento se expandirá automáticamente para acomodar el contenido. */
    max-height: 70rem; /* Establece la altura máxima del elemento en 70 "rem". Si el contenido del elemento supera esta altura, se habilitará la barra de desplazamiento vertical para permitir al usuario desplazarse por el contenido. */
    overflow: hidden; /* Oculta el contenido que sobrepasa los límites del elemento, es decir, no se mostrará el contenido que está fuera del rango de la altura establecida. */
    
    .overlay {
        position: absolute;
        background: rgb(127,0,167);
        background: linear-gradient(270deg, rgba(127,0,167,0.3) 0%, rgba(255,0,148,0.3) 100%); 
        height: 100%;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    video {
        width: auto;
        display: block;
        @include m.desktop { 
            width: 100%;
        }
    }

    .contenido-video {
        z-index: 1;
        h2 {
            color: v.$blanco;
            font-size: 7rem;
            margin: 0;
        }

        p {
            background-color: v.$rosa;
            display: inline-block;
            padding: 1rem 2rem;
            color: v.$blanco;
            font-weight: 700;
            font-size: 2.4rem;
            margin: 0;
        }
    }
}